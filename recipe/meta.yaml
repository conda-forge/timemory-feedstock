{% set name = "timemory" %}
{% set version = "3.2.2" %}
{% set build = 1 %}

{% set generator = "NMake Makefiles" %}  # [win]
{% set generator = "Unix Makefiles" %}  # [not win]

{% set cmake_args = "" %}

{% set generator_args = "-j2" %}  # [not win]
{% set generator_args = "" %}  # [win]

# Set MPI related variables
{% if mpi != "nompi" %}
  {% set mpi_build_prefix = "_" + mpi|string %}
  {% set build = build + 100 %}
{% else %}
  {% set mpi_build_prefix = "" %}
{% endif %}

# Set CUDA related variables (reserved for future use)
{% set cuda_build_prefix = "" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: b7425357d3c028aaf1f15622f8c29a897add0d332210f4c5dbc834b4e412f8cb

build:
  number: {{ build }}
  string: "py{{ py }}{{ mpi_build_prefix }}{{ cuda_build_prefix }}h{{ PKG_HASH }}_{{ build }}"
  script: "{{ PYTHON }} setup.py install --single-version-externally-managed --record record.txt \
    -G \"{{ generator }}\" \
    --cxx-standard=17 \
    --enable-portable \
    --enable-static-libs \
    --disable-c \
    --disable-cuda \
    --disable-fortran \
    --disable-ert \
    --disable-develop \
    --disable-shared-libs \
    --disable-unity-build \
    --disable-require-packages \
    --disable-ompt \
    --disable-upcxx \
    --disable-kokkos \
    --disable-caliper \
    --disable-dyninst \
    --disable-gperftools \
    --disable-compiler-instrumentation \
    --disable-install-rpath-use-link-path \
    --skip-generator-test \
    -- {{ cmake_args }} \
    -- {{ generator_args }}"
  skip: true  # [(x86 and not x86_64) or osx or py!=38]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - cmake
    - ninja
  host:
    - python
    - pip
    - cython
    - pybind11
    - pybind11-abi
    - scikit-build
    - {{ mpi }}  # [linux and mpi != "nompi"]
  run:
    - python
    - six
    - numpy
    - pydot
    - pillow
    - pandas
    - matplotlib-base
    - multiprocess
    - {{ mpi }}  # [linux and mpi != "nompi"]

test:
  imports:
    - timemory
    - timemory.settings
    - timemory.profiler
    - timemory.trace
    - timemory.util
  requires:
    - pytest
  source_files:
    - timemory/test/*
  commands:
    - timemory-python-line-profiler -h
    - timemory-python-profiler -h
    - timemory-python-trace -h
    - timemory-roofline -h
    - timemory-analyze -h
    - timemory-plotter -h
    - timemory-avail -a
    - timem -h  # [not win]
    - pytest -k 'not test_mallocp' --pyargs timemory  # [linux]
    - pytest --pyargs timemory  # [not linux]

about:
  home: https://github.com/NERSC/timemory
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Lightweight performance analysis toolkit and suite of tools
  description: |
    Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.
    Timemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets
    which can inter-weaved and without nesting restrictions.
  doc_url: https://timemory.readthedocs.io/
  dev_url: https://github.com/NERSC/timemory

extra:
  recipe-maintainers:
    - jrmadsen
